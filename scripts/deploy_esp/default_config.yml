# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation

# GitHub Credentials.
#
# Required if using non-public repositories.
# It can be generated on following website https://github.com/settings/tokens (SSO authorization might be needed).
#
# If provided, both user and token are required.
# It is assumed that every repository defined in this file is part of the same GitHub instance (e.g. https://github.com) 
github:
  user: ''
  token: ''

# Edge Software Provisioner repository settings.
esp:
  # URL of the ESP's repository.
  url: https://github.com/intel/Edge-Software-Provisioner
  # Branch to be checked out.
  branch: master
  # ESP destination path.
  # This will be a path where ESP will be cloned to (relative to the script working directory).
  dest_dir: './esp'

# Settings related to dnsmasq which provides DHCP and PXE services.
#
# In case of USB-only provisioning (e.g. in corporate network with existing DHCP services),
#   the dnsmasq should be disabled to not interfere with existing network infrastructure.
#
# Rest of the settings in this section are related to the DHCP configuration that
#    will be sent to machines provisioned with PXE.
# If left empty, these settings will be automatically deduced by the ESP,
#   however custom values might be required in some cases.
dnsmasq:
  # If true, then the dnsmasq will be started with rest of the Provisioning System suite.
  enabled: false

  # Domain Name System (DNS) settings
  # These values should be changed in case of default DNS (8.8.4.4 and 8.8.8.8) are not reachable.
  network_dns_primary: ''     # e.g. 8.8.4.4
  network_dns_secondary: ''   # e.g. 8.8.8.8

  # DHCP and network settings
  dhcp_range_minimum: ''      # e.g. 192.168.1.100
  dhcp_range_maximum: ''      # e.g. 192.168.1.250
  network_broadcast_ip: ''    # e.g. 192.168.1.255
  network_gateway_ip: ''      # e.g. 192.168.1.1

  # IP address of the Provisioning System
  host_ip: ''                 # e.g. 192.168.1.2

# Docker settings
docker:
  # List of registry mirrors
  # The list will be propagated to the machine under provisioning.
  #
  # WARNING: This won't be applied to the Provisioning System.
  registry_mirrors: []

  # DockerHub Credentials
  # If values are supplied, then docker login will be performed during Operating System provisioning.
  #
  # WARNING: This won't be applied neither to the Provisioning System
  #   nor the machine under provisioning (with Experience Kits).
  dockerhub:
    username: ""
    password: ""

# Address of the NTP server used during deployment
ntp_server: ''

# List of ESP profiles for Smart Edge Open.
profiles:
  - name: Smart_Edge_Open_Developer_Experience_Kits
  
    # Address of the profile repository
    url: https://github.com/smart-edge-open/profiles.git

    # Branch to be checked out
    branch: smart-edge-open-21.09-b
    # Profile scenario
    # Possible values: single-node, multi-node
    scenario: single-node

    # Settings of Experience Kit that will be deployed
    experience_kit:
      # Address of the Experience Kit repository
      url: https://github.com/smart-edge-open/open-developer-experience-kits.git
      # Branch to be checked out
      branch: smart-edge-open-21.09
      # Deployment to be performed
      # Possible values: dek
      deployment: dek

    # MAC address of the controlplane's primary interface.
    # This value is used only in multi-node scenario.
    controlplane_mac: ''

    # Credentials of the operating system account that'll be created.
    # Account will be added to the sudoers.
    account:
      username: smartedge-open
      password: smartedge-open

    # Experience Kit group_vars overrides.
    # This section can be used to supply extra variables to influence the deployment of the Experience Kit.
    # The variables will be copied as-is to the destination group_vars on the machine.
    # Refer to the Experience Kit documentation for more examples.
    #
    # Example:
    # group_vars:
    #   groups:
    #     all:
    #       topology_manager:
    #         policy: "none"
    #     controller_group:
    #     edgeenode_group:
    group_vars:
      groups:
        all:
        controller_group:
        edgenode_group:

    # Experience Kit host_vars overrides.
    # This section works analogous to the group_vars section, but influences the settings of specific host.
    host_vars:
      hosts:
        controller:
        node01:

    # Experience Kit sideloads.
    # This section can be used to copy certain files required in the process of Experience Kit deployments.
    #
    # file_path is a path on the Provision System.
    # dest_path is path on the system under provisioning.
    #   The path can be relative (the result will be destination relative to /opt/seo) or absolute.
    sideload:
      # Example entry:
      #
      # This will cause a file /opt/extra_package.zip to be copied into /opt/seo/extra/extra_package.zip
      # - file_path: "/opt/extra_package.zip"
      #   dest_path: "./extra/extra_package.zip"


# Configuration of USB images.
#
# Generated images are in form of raw .img disk.
# ESP's flashusb.sh utility can be used to the image onto the USB drive.
usb_images:
  # Build USB images.
  # If false, then no USB image will be produced.
  build: true

  # Build images for legacy BIOS.
  bios: true

  # Build images for UEFI BIOS.
  efi: true

  # Build an all-in-one image for each BIOS.
  # If false, then an image for each of the profiles will be produced separately.
  # If true, then a single image per BIOS with all of the profiles will be produced.
  all_in_one: false

  # Path where built images will be placed.
  # This is relative path to the script's working directory.
  output_path: './out'
